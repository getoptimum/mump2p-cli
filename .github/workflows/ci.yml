name: mump2p-cli CI

env:
  go-version: "1.25.0"
  lint-version: "v2.0.1"
  GOPRIVATE: "github.com/getoptimum"
  GITHUB_TOKEN: ${{ secrets.OPT_ACCESS_TOKEN }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  # Required: allow read access to the content for analysis.
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
  # Optional: allow write access to checks to allow the action to annotate code in the PR.
  checks: write

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.go-version }}
          cache: true
      - uses: actions/checkout@v4
      - name: Configure git for private modules
        run: |
          git config --global url."https://${{ secrets.OPT_ACCESS_TOKEN }}:@github.com/".insteadOf "https://github.com/"
      - name: Run tests
        run: make test
      - name: Test CLI build
        run: make build

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.go-version }}
          cache: true
      - uses: actions/checkout@v4
      - name: Configure git for private modules
        run: |
          git config --global url."https://${{ secrets.OPT_ACCESS_TOKEN }}:@github.com/".insteadOf "https://github.com/"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: ${{ env.lint-version }}
          args: --timeout 10m

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true
          working-directory: ./
