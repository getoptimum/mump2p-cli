name: mump2p-cli CI

env:
  go-version: "1.24.1"
  lint-version: "v2.0.1"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  # Required: allow read access to the content for analysis.
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
  # Optional: allow write access to checks to allow the action to annotate code in the PR.
  checks: write

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.go-version }}
          cache: true
      - uses: actions/checkout@v4
      - name: Run tests
        run: make test
      - name: Test CLI build
        run: make build

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.go-version }}
          cache: true
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: ${{ env.lint-version }}
          args: --timeout 10m
          working-directory: ./

  e2e:
    name: end-to-end
    runs-on: ubuntu-latest
#    needs: [test, golangci] # only run after tests + lint succeed
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.go-version }}
          cache: true
      - uses: actions/checkout@v4
      - name: Run E2E tests
        env:
          SERVICE_URL: ${{ secrets.SERVICE_URL }}
          AUTH_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          MUMP2P_E2E_TOKEN_B64: ${{ secrets.MUMP2P_E2E_TOKEN_B64 }}
        run: make e2e-test