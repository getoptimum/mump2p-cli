name: Release CLI

on:
  push:
    tags:
      - 'v*'
      - 'v*.*.*-rc*'

jobs:
  build-and-test:
    name: Build and E2E Test
    runs-on: ubuntu-latest
    env:
      DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
      SERVICE_URL: ${{ secrets.SERVICE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest
          args: --timeout 5m

      - name: Test
        run: make test 

      - name: Build
        run: |
          make build \
            DOMAIN="${DOMAIN}" \
            CLIENT_ID="${CLIENT_ID}" \
            AUDIENCE="${AUDIENCE}" \
            SERVICE_URL="${SERVICE_URL}"

      - name: Run E2E Tests
        env:
          MUMP2P_E2E_TOKEN_B64: ${{ secrets.MUMP2P_E2E_TOKEN_B64 }}
        run: make e2e-test

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cli-binaries
          path: dist/
          retention-days: 1

  release:
    name: Create Release
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-binaries
          path: dist/

      - name: Setup GitHub CLI
        run: |
          gh --version || (sudo apt-get update && sudo apt-get install -y gh)

      - name: Auth GH CLI using PAT 
        run: echo "${{ secrets.RELEASE_GH_TOKEN }}" | gh auth login --with-token

      - name: Set Release Variables
        id: vars
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "CLI_NAME=mump2p" >> $GITHUB_ENV
      
      - name: Create Release
        run: |
          make release